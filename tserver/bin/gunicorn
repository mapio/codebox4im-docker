#!/bin/bash

export BASEDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )"
mkdir -p "$BASEDIR"/var

if [ "$1" == "start" ] || [ "$1" == "startail" ]; then

	export PYTHONPATH="$BASEDIR/bin/tm"
	export TM_SETTINGS="/app/etc/conf.py"

	# replacing UPLOAD_DIR and HOME
	export TM_SETTINGS_ORIG="$TM_SETTINGS"
	export TM_SETTINGS="${TM_SETTINGS_ORIG%%.py}-adj.py"
	( cat "$TM_SETTINGS_ORIG" | grep -v 'UPLOAD_DIR.*='| grep -v 'HOME.*='
	  echo "UPLOAD_DIR='/app/uploads/'"
	  echo "HOME='/home/esame/workspace'"
	) >> "$TM_SETTINGS"
	echo -e "Attempting to start gunicorn with\n\tconfiguration: $TM_SETTINGS\n\tcode: $PYTHONPATH"
	rm -f "$BASEDIR"/var/gunicorn.*
	touch "$BASEDIR"/var/gunicorn.errors

	gunicorn -m 0022 -c "$BASEDIR"/etc/gunicorn.conf \
		--access-logfile "$BASEDIR"/var/gunicorn.accesses \
		--error-logfile "$BASEDIR"/var/gunicorn.errors \
		--pid "$BASEDIR"/var/gunicorn.pid tm.web:app

	echo -en "\twaiting for server startup"
	attempts=10
	while [[ $attempts > 0 ]] && ! grep -q 'Booting worker with pid' "$BASEDIR"/var/gunicorn.errors; do
		echo -n .
		sleep 1
		attempts=$(( $attempts - 1 ))
	done
	if [[ $attempts > 0 ]]; then
		echo ". tserver started!"
	else
		echo " FAILED TO START!"
		exit 1
	fi
	chmod go= "$BASEDIR"/var/gunicorn.* /app/uploads/EVENTS.log

	if [ "$1" == "startail" ]; then
		tail -f "$BASEDIR"/var/gunicorn.{errors,accesses} /app/uploads/EVENTS.log
	fi


elif [ "$1" == "tail" ]; then

	tail -f "$BASEDIR"/var/gunicorn.{errors,accesses}

elif [ "$1" == "reload" ]; then

	if [ -r "$BASEDIR"/var/gunicorn.pid ]; then
		tail -n 0 -f "$BASEDIR"/var/gunicorn.errors & pid=$!
		kill -HUP $(cat "$BASEDIR"/var/gunicorn.pid)
		sleep 1
		kill $pid
	else
		echo 'no pidfile present'
	fi

else

	if [ -r "$BASEDIR"/var/gunicorn.pid ]; then
		tail -n 0 -f "$BASEDIR"/var/gunicorn.errors & pid=$!
		kill $(cat "$BASEDIR"/var/gunicorn.pid)
		sleep 1
		kill $pid
	else
		echo 'no pidfile present'
	fi

fi
