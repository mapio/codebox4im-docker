#!/bin/bash

echoerr() {
	echo "$@" 1>&2
}

exiterr() {
	exit 1
}

ip=$(boot2docker ip)
user_key=$1

if [ -z $user_key ]; then
	echoerr "Must specify user:key"
	exit 1
fi

user=${user_key%%:*}
key=${user_key##*:}

did=''
if [[ -r "./data/${user}.did" ]]; then

	did=$(cat "./data/${user}.did")
	echoerr -n "Found previous run id '$did'..."
	running=$(docker inspect -f '{{ .State.Running }}' $did 2>/dev/null)
	if [[ $running == "true" ]]; then
		echoerr " instance alive!"
	else
		echoerr " instance not running! Cleaning up id..."
		did=''
		rm -f "./data/${user}.did"
	fi

fi

if [[ -z "$did" ]]; then

	if [[ ! -d "./data/$user" ]]; then
		mkdir -p "./data/$user"
	fi

	did=$(docker run --name "cb_${user}" -d -P -v $(pwd)/data:/data mapio/codebox4im-docker run --users $user_key "$user" && sleep 1)
	echoerr "Started for user '$user', key '$key', did '$did'"
	echo $did > "./data/${user}.did"
fi

port=$(docker port $did)
port=${port##*:}

if curl -s http://$ip:$port/ | grep -q '<title>Codebox</title>'; then
	echoerr "Server running on port '$port', homepage ok!"
	echo "{ \"user\": \"$user\", \"key\": \"$key\", \"did\": \"$did\", \"port\": \"$port\", \"status\": \"ok\" }"
else
	echoerr "Somehting wrong happened, curl cant't retrieve the homepage!"
	echo "{ \"user\": \"$user\", \"key\": \"$key\", \"status\": \"error\" }"
	exit 1
fi


